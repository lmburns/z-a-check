# Copyright (c) 2021-2022 Lucas Burns
# Do whatever

emulate -RL zsh
setopt extendedglob warncreateglobal typesetsilent noshortloops

[[ "$1" = plugin ]] && \
    local type="$1" user="$2" plugin="$3" id_as="$4" dir="$5" || \
    local type="$1" url="$2" id_as="$3" dir="$4"

if (( $+ICE[check] )) {
    builtin zmodload -Fa zsh/parameter p:commands p:functions
    builtin zmodload -Fa zsh/files b:zf_rm
    local check retval
    local -a match mbegin mend
    local -a checks
    checks=( ${(@)${(s.:.)ICE[check]}//((#s)[[:space:]]##|[[:space:]]##(#e))/} )

    for check ( $checks[@] ) {
        @zinit-substitute 'check'
        eval "${${(M)check:#(#b)(\!|)(*)}:+(( $match[1] $+commands[$match[2]] ))}" || \
            {
                # Available variables: $___id, $plugin, $user, $local_path
                # print -rl -- "$(whence -vm '*zinit*')"

                setopt localtraps
                # trap "[[ -d $local_path ]] && zf_rm -rf $local_path" EXIT INT
                trap "[[ -d $dir ]] && zf_rm -rf $dir" EXIT INT

                ICE[atclone]=
                ICE=()

                # FIX: Why does zinit clear the screen when printing?
                # Is it because of a lack of a newline?

                (( ! OPTS[opt_-q,--quiet] )) && {

                    if (( ! $+commands[$match[2]] )) {
                        +zinit-message \
                            "{pre}check annex: {error}You don't have {obj2}$match[2]{rst}{error} and need to" \
                            "negate {obj2}$match[2]{rst}{error} for the evaluation to become true{rst}{nl}"
                    } else {
                        +zinit-message \
                            "{pre}check annex: {error}It's not true that you {uname}don't{error} have" \
                            "{obj}${match[2]}. Packge is deleted{error}{rst}{nl}"
                    }
                }

                command sleep 0.002
                exit;
            }
    }
    return 0;
}

# vim: ft=zsh:et:sw=4:ts=2:sts=4:fdm=marker:fmr={{{,}}}:
